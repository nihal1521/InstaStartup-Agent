"use client";

import { useState } from 'react';
import { motion } from 'framer-motion';
import { StartupData } from '@/utils/startup-generator';
import { AI_PROVIDERS, AIProvider } from '@/utils/ai-providers';
import { LivePreview } from '@/components/live-preview';
import { DeploymentOptions } from '@/components/deployment-options';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Badge } from '@/components/ui/badge';
import { 
  Download, 
  Share2, 
  ExternalLink, 
  Palette, 
  FileText, 
  Presentation,
  Code,
  Globe,
  Users,
  DollarSign,
  Target,
  Lightbulb
} from 'lucide-react';

interface ResultDisplayProps {
  startupData: StartupData;
  aiProvider?: AIProvider;
}

export function ResultDisplay({ startupData, aiProvider = 'openai' }: ResultDisplayProps) {
  const [activeTab, setActiveTab] = useState('overview');

  const tabs = [
    { id: 'overview', label: 'Overview', icon: Lightbulb },
    { id: 'preview', label: 'Live Preview', icon: Globe },
    { id: 'branding', label: 'Branding', icon: Palette },
    { id: 'website', label: 'Website', icon: Globe },
    { id: 'business', label: 'Business', icon: DollarSign },
    { id: 'pitch', label: 'Pitch Deck', icon: Presentation },
    { id: 'social', label: 'Social Media', icon: Share2 },
    { id: 'deploy', label: 'Deploy', icon: Download }
  ];

  return (
    <div className="max-w-7xl mx-auto">
      {/* Header */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center mb-12"
      >
        <div className="flex items-center justify-center mb-6">
          {startupData.logoUrl && (
            <img 
              src={startupData.logoUrl} 
              alt={`${startupData.brandName} Logo`}
              className="w-16 h-16 rounded-2xl mr-4 object-cover"
              onError={(e) => {
                const target = e.target as HTMLImageElement;
                target.src = `https://via.placeholder.com/64x64/6366f1/white?text=${encodeURIComponent(startupData.brandName.substring(0, 2).toUpperCase())}`;
              }}
            />
          )}
          <div>
            <h1 className="text-4xl md:text-5xl font-bold bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent">
              {startupData.brandName}
            </h1>
            <p className="text-xl text-gray-600 dark:text-gray-300 mt-2">
              {startupData.tagline}
            </p>
            <div className="flex items-center mt-2">
              <span className="text-sm text-gray-500 mr-2">Generated by:</span>
              <Badge variant="outline" className="text-xs">
                {AI_PROVIDERS[aiProvider]?.icon} {AI_PROVIDERS[aiProvider]?.displayName}
              </Badge>
            </div>
          </div>
        </div>

        <div className="flex flex-wrap justify-center gap-4 mb-8">
          <Button className="bg-gradient-to-r from-indigo-500 to-purple-600 hover:from-indigo-600 hover:to-purple-700">
            <ExternalLink className="w-4 h-4 mr-2" />
            View Live Demo
          </Button>
          <Button variant="outline" className="glass border-indigo-200 dark:border-indigo-700">
            <Download className="w-4 h-4 mr-2" />
            Download Code
          </Button>
          <Button variant="outline" className="glass border-indigo-200 dark:border-indigo-700">
            <Share2 className="w-4 h-4 mr-2" />
            Share
          </Button>
        </div>
      </motion.div>

      {/* Main Content */}
      <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full">
        <TabsList className="grid w-full grid-cols-4 md:grid-cols-8 glass-strong mb-8">
          {tabs.map((tab) => (
            <TabsTrigger 
              key={tab.id} 
              value={tab.id}
              className="flex items-center space-x-2 data-[state=active]:bg-indigo-500 data-[state=active]:text-white"
            >
              <tab.icon className="w-4 h-4" />
              <span className="hidden sm:inline">{tab.label}</span>
            </TabsTrigger>
          ))}
        </TabsList>

        <TabsContent value="overview" className="space-y-6">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"
          >
            <Card className="glass-strong border-indigo-200 dark:border-indigo-700">
              <CardHeader>
                <CardTitle className="flex items-center space-x-2">
                  <Target className="w-5 h-5 text-indigo-500" />
                  <span>Target Audience</span>
                </CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-gray-600 dark:text-gray-300">{startupData.targetAudience}</p>
              </CardContent>
            </Card>

            <Card className="glass-strong border-indigo-200 dark:border-indigo-700">
              <CardHeader>
                <CardTitle className="flex items-center space-x-2">
                  <DollarSign className="w-5 h-5 text-green-500" />
                  <span>Business Model</span>
                </CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-gray-600 dark:text-gray-300">{startupData.businessModel}</p>
              </CardContent>
            </Card>

            <Card className="glass-strong border-indigo-200 dark:border-indigo-700 md:col-span-2 lg:col-span-1">
              <CardHeader>
                <CardTitle className="flex items-center space-x-2">
                  <Palette className="w-5 h-5 text-purple-500" />
                  <span>Brand Colors</span>
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="flex space-x-2">
                  <div 
                    className="w-8 h-8 rounded-full border-2 border-white shadow-md"
                    style={{ backgroundColor: startupData.colors.primary }}
                    title="Primary Color"
                  />
                  <div 
                    className="w-8 h-8 rounded-full border-2 border-white shadow-md"
                    style={{ backgroundColor: startupData.colors.secondary }}
                    title="Secondary Color"
                  />
                  <div 
                    className="w-8 h-8 rounded-full border-2 border-white shadow-md"
                    style={{ backgroundColor: startupData.colors.accent }}
                    title="Accent Color"
                  />
                </div>
              </CardContent>
            </Card>
          </motion.div>

          <Card className="glass-strong border-indigo-200 dark:border-indigo-700">
            <CardHeader>
              <CardTitle>Description</CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-gray-600 dark:text-gray-300 leading-relaxed">{startupData.description}</p>
            </CardContent>
          </Card>

          <Card className="glass-strong border-indigo-200 dark:border-indigo-700">
            <CardHeader>
              <CardTitle>Key Features</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                {startupData.features.map((feature, index) => (
                  <div key={index} className="flex items-start space-x-3">
                    <div className="w-2 h-2 bg-indigo-500 rounded-full mt-2 flex-shrink-0" />
                    <span className="text-gray-600 dark:text-gray-300">{feature}</span>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="preview">
          <LivePreview 
            startupData={startupData} 
            onEdit={(field, value) => {
              // Handle live editing
              console.log('Edit:', field, value);
            }}
          />
        </TabsContent>

        <TabsContent value="branding">
          <div className="space-y-6">
            <Card className="glass-strong border-indigo-200 dark:border-indigo-700">
              <CardHeader>
                <CardTitle>Brand Identity</CardTitle>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="flex items-center space-x-6">
                  {startupData.logoUrl && (
                    <img 
                      src={startupData.logoUrl} 
                      alt={`${startupData.brandName} Logo`}
                      className="w-24 h-24 rounded-2xl shadow-lg object-cover"
                      onError={(e) => {
                        const target = e.target as HTMLImageElement;
                        target.src = `https://via.placeholder.com/96x96/6366f1/white?text=${encodeURIComponent(startupData.brandName.substring(0, 2).toUpperCase())}`;
                      }}
                    />
                  )}
                  <div>
                    <h3 className="text-2xl font-bold">{startupData.brandName}</h3>
                    <p className="text-lg text-gray-600 dark:text-gray-300">{startupData.tagline}</p>
                  </div>
                </div>

                <div>
                  <h4 className="font-semibold mb-3">Color Palette</h4>
                  <div className="grid grid-cols-3 gap-4">
                    <div className="text-center">
                      <div 
                        className="w-16 h-16 rounded-xl shadow-lg mx-auto mb-2"
                        style={{ backgroundColor: startupData.colors.primary }}
                      />
                      <p className="text-sm font-medium">Primary</p>
                      <p className="text-xs text-gray-500">{startupData.colors.primary}</p>
                    </div>
                    <div className="text-center">
                      <div 
                        className="w-16 h-16 rounded-xl shadow-lg mx-auto mb-2"
                        style={{ backgroundColor: startupData.colors.secondary }}
                      />
                      <p className="text-sm font-medium">Secondary</p>
                      <p className="text-xs text-gray-500">{startupData.colors.secondary}</p>
                    </div>
                    <div className="text-center">
                      <div 
                        className="w-16 h-16 rounded-xl shadow-lg mx-auto mb-2"
                        style={{ backgroundColor: startupData.colors.accent }}
                      />
                      <p className="text-sm font-medium">Accent</p>
                      <p className="text-xs text-gray-500">{startupData.colors.accent}</p>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        <TabsContent value="website">
          <div className="space-y-6">
            <Card className="glass-strong border-indigo-200 dark:border-indigo-700">
              <CardHeader>
                <CardTitle>Website Content</CardTitle>
              </CardHeader>
              <CardContent className="space-y-6">
                <div>
                  <h4 className="font-semibold mb-2">Hero Section</h4>
                  <h3 className="text-2xl font-bold mb-2">{startupData.marketingCopy.heroTitle}</h3>
                  <p className="text-gray-600 dark:text-gray-300 mb-4">{startupData.marketingCopy.heroSubtitle}</p>
                  <Button className="bg-gradient-to-r from-indigo-500 to-purple-600">
                    {startupData.marketingCopy.ctaText}
                  </Button>
                </div>

                <div>
                  <h4 className="font-semibold mb-2">About Section</h4>
                  <p className="text-gray-600 dark:text-gray-300 leading-relaxed">{startupData.marketingCopy.aboutText}</p>
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        <TabsContent value="business">
          <div className="space-y-6">
            <Card className="glass-strong border-indigo-200 dark:border-indigo-700">
              <CardHeader>
                <CardTitle>Pricing Plans</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                  {startupData.pricing.plans.map((plan, index) => (
                    <div key={index} className="glass rounded-2xl p-6 text-center hover:glass-strong transition-all duration-300">
                      <h3 className="text-xl font-bold mb-2">{plan.name}</h3>
                      <p className="text-3xl font-bold text-indigo-600 dark:text-indigo-400 mb-4">{plan.price}</p>
                      <ul className="space-y-2">
                        {plan.features.map((feature, featureIndex) => (
                          <li key={featureIndex} className="text-sm text-gray-600 dark:text-gray-300">
                            {feature}
                          </li>
                        ))}
                      </ul>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        <TabsContent value="pitch">
          <div className="space-y-6">
            <Card className="glass-strong border-indigo-200 dark:border-indigo-700">
              <CardHeader>
                <CardTitle>Pitch Deck</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  {startupData.pitchDeck.slides.map((slide, index) => (
                    <div key={index} className="glass rounded-xl p-4 hover:glass-strong transition-all duration-300">
                      <div className="flex items-center space-x-2 mb-2">
                        <Badge variant="outline" className="text-xs">
                          Slide {index + 1}
                        </Badge>
                        <Badge variant="secondary" className="text-xs">
                          {slide.type}
                        </Badge>
                      </div>
                      <h4 className="font-semibold mb-2">{slide.title}</h4>
                      <p className="text-sm text-gray-600 dark:text-gray-300">{slide.content}</p>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        <TabsContent value="social">
          <div className="space-y-6">
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              <Card className="glass-strong border-indigo-200 dark:border-indigo-700">
                <CardHeader>
                  <CardTitle className="flex items-center space-x-2">
                    <div className="w-6 h-6 bg-blue-600 rounded-md"></div>
                    <span>LinkedIn</span>
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-sm text-gray-600 dark:text-gray-300 whitespace-pre-wrap">
                    {startupData.socialMedia.linkedin}
                  </p>
                </CardContent>
              </Card>

              <Card className="glass-strong border-indigo-200 dark:border-indigo-700">
                <CardHeader>
                  <CardTitle className="flex items-center space-x-2">
                    <div className="w-6 h-6 bg-sky-500 rounded-md"></div>
                    <span>Twitter</span>
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-sm text-gray-600 dark:text-gray-300 whitespace-pre-wrap">
                    {startupData.socialMedia.twitter}
                  </p>
                </CardContent>
              </Card>

              <Card className="glass-strong border-indigo-200 dark:border-indigo-700">
                <CardHeader>
                  <CardTitle className="flex items-center space-x-2">
                    <div className="w-6 h-6 bg-gradient-to-r from-purple-500 to-pink-500 rounded-md"></div>
                    <span>Instagram</span>
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-sm text-gray-600 dark:text-gray-300 whitespace-pre-wrap">
                    {startupData.socialMedia.instagram}
                  </p>
                </CardContent>
              </Card>
            </div>
          </div>
        </TabsContent>

        <TabsContent value="deploy">
          <DeploymentOptions startupData={startupData} />
        </TabsContent>
      </Tabs>
    </div>
  );
}